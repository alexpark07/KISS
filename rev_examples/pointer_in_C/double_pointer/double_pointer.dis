
double_pointer:     file format elf32-i386


Disassembly of section .text:

08048320 <_start>:
 8048320:	31 ed                	xor    ebp,ebp
 8048322:	5e                   	pop    esi
 8048323:	89 e1                	mov    ecx,esp
 8048325:	83 e4 f0             	and    esp,0xfffffff0
 8048328:	50                   	push   eax
 8048329:	54                   	push   esp
 804832a:	52                   	push   edx
 804832b:	68 30 85 04 08       	push   0x8048530
 8048330:	68 c0 84 04 08       	push   0x80484c0
 8048335:	51                   	push   ecx
 8048336:	56                   	push   esi
 8048337:	68 1d 84 04 08       	push   0x804841d
 804833c:	e8 cf ff ff ff       	call   8048310 <__libc_start_main@plt>
 8048341:	f4                   	hlt    
 8048342:	66 90                	xchg   ax,ax
 8048344:	66 90                	xchg   ax,ax
 8048346:	66 90                	xchg   ax,ax
 8048348:	66 90                	xchg   ax,ax
 804834a:	66 90                	xchg   ax,ax
 804834c:	66 90                	xchg   ax,ax
 804834e:	66 90                	xchg   ax,ax

08048350 <__x86.get_pc_thunk.bx>:
 8048350:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048353:	c3                   	ret    
 8048354:	66 90                	xchg   ax,ax
 8048356:	66 90                	xchg   ax,ax
 8048358:	66 90                	xchg   ax,ax
 804835a:	66 90                	xchg   ax,ax
 804835c:	66 90                	xchg   ax,ax
 804835e:	66 90                	xchg   ax,ax

08048360 <deregister_tm_clones>:
 8048360:	b8 23 a0 04 08       	mov    eax,0x804a023
 8048365:	2d 20 a0 04 08       	sub    eax,0x804a020
 804836a:	83 f8 06             	cmp    eax,0x6
 804836d:	77 01                	ja     8048370 <deregister_tm_clones+0x10>
 804836f:	c3                   	ret    
 8048370:	b8 00 00 00 00       	mov    eax,0x0
 8048375:	85 c0                	test   eax,eax
 8048377:	74 f6                	je     804836f <deregister_tm_clones+0xf>
 8048379:	55                   	push   ebp
 804837a:	89 e5                	mov    ebp,esp
 804837c:	83 ec 18             	sub    esp,0x18
 804837f:	c7 04 24 20 a0 04 08 	mov    DWORD PTR [esp],0x804a020
 8048386:	ff d0                	call   eax
 8048388:	c9                   	leave  
 8048389:	c3                   	ret    
 804838a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048390 <register_tm_clones>:
 8048390:	b8 20 a0 04 08       	mov    eax,0x804a020
 8048395:	2d 20 a0 04 08       	sub    eax,0x804a020
 804839a:	c1 f8 02             	sar    eax,0x2
 804839d:	89 c2                	mov    edx,eax
 804839f:	c1 ea 1f             	shr    edx,0x1f
 80483a2:	01 d0                	add    eax,edx
 80483a4:	d1 f8                	sar    eax,1
 80483a6:	75 01                	jne    80483a9 <register_tm_clones+0x19>
 80483a8:	c3                   	ret    
 80483a9:	ba 00 00 00 00       	mov    edx,0x0
 80483ae:	85 d2                	test   edx,edx
 80483b0:	74 f6                	je     80483a8 <register_tm_clones+0x18>
 80483b2:	55                   	push   ebp
 80483b3:	89 e5                	mov    ebp,esp
 80483b5:	83 ec 18             	sub    esp,0x18
 80483b8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80483bc:	c7 04 24 20 a0 04 08 	mov    DWORD PTR [esp],0x804a020
 80483c3:	ff d2                	call   edx
 80483c5:	c9                   	leave  
 80483c6:	c3                   	ret    
 80483c7:	89 f6                	mov    esi,esi
 80483c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483d0 <__do_global_dtors_aux>:
 80483d0:	80 3d 20 a0 04 08 00 	cmp    BYTE PTR ds:0x804a020,0x0
 80483d7:	75 13                	jne    80483ec <__do_global_dtors_aux+0x1c>
 80483d9:	55                   	push   ebp
 80483da:	89 e5                	mov    ebp,esp
 80483dc:	83 ec 08             	sub    esp,0x8
 80483df:	e8 7c ff ff ff       	call   8048360 <deregister_tm_clones>
 80483e4:	c6 05 20 a0 04 08 01 	mov    BYTE PTR ds:0x804a020,0x1
 80483eb:	c9                   	leave  
 80483ec:	f3 c3                	repz ret 
 80483ee:	66 90                	xchg   ax,ax

080483f0 <frame_dummy>:
 80483f0:	a1 10 9f 04 08       	mov    eax,ds:0x8049f10
 80483f5:	85 c0                	test   eax,eax
 80483f7:	74 1f                	je     8048418 <frame_dummy+0x28>
 80483f9:	b8 00 00 00 00       	mov    eax,0x0
 80483fe:	85 c0                	test   eax,eax
 8048400:	74 16                	je     8048418 <frame_dummy+0x28>
 8048402:	55                   	push   ebp
 8048403:	89 e5                	mov    ebp,esp
 8048405:	83 ec 18             	sub    esp,0x18
 8048408:	c7 04 24 10 9f 04 08 	mov    DWORD PTR [esp],0x8049f10
 804840f:	ff d0                	call   eax
 8048411:	c9                   	leave  
 8048412:	e9 79 ff ff ff       	jmp    8048390 <register_tm_clones>
 8048417:	90                   	nop
 8048418:	e9 73 ff ff ff       	jmp    8048390 <register_tm_clones>

0804841d <main>:
#include <stdio.h>

int main()
{
 804841d:	55                   	push   ebp
 804841e:	89 e5                	mov    ebp,esp
 8048420:	83 e4 f0             	and    esp,0xfffffff0
 8048423:	83 ec 20             	sub    esp,0x20
	int a;
	int *pa;
	int **ppa;

	pa = &a;
 8048426:	8d 44 24 18          	lea    eax,[esp+0x18]
 804842a:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
	ppa = &pa;
 804842e:	8d 44 24 14          	lea    eax,[esp+0x14]
 8048432:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax

	a = 3;
 8048436:	c7 44 24 18 03 00 00 	mov    DWORD PTR [esp+0x18],0x3
 804843d:	00 

	printf("a  : %08x, *pa: %08x, **pa: %08x\n", a, *pa, **ppa);
 804843e:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 8048442:	8b 00                	mov    eax,DWORD PTR [eax]
 8048444:	8b 08                	mov    ecx,DWORD PTR [eax]
 8048446:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 804844a:	8b 10                	mov    edx,DWORD PTR [eax]
 804844c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
 8048450:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
 8048454:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 8048458:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804845c:	c7 04 24 50 85 04 08 	mov    DWORD PTR [esp],0x8048550
 8048463:	e8 88 fe ff ff       	call   80482f0 <printf@plt>
	printf("&a : %08x,  pa: %08x,  *pa: %08x\n", &a, pa, *ppa);
 8048468:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 804846c:	8b 10                	mov    edx,DWORD PTR [eax]
 804846e:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 8048472:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
 8048476:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 804847a:	8d 44 24 18          	lea    eax,[esp+0x18]
 804847e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048482:	c7 04 24 74 85 04 08 	mov    DWORD PTR [esp],0x8048574
 8048489:	e8 62 fe ff ff       	call   80482f0 <printf@plt>
	printf("&pa: %08x, ppa: %08x\n", &pa, ppa);
 804848e:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 8048492:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048496:	8d 44 24 14          	lea    eax,[esp+0x14]
 804849a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804849e:	c7 04 24 96 85 04 08 	mov    DWORD PTR [esp],0x8048596
 80484a5:	e8 46 fe ff ff       	call   80482f0 <printf@plt>

	return 0;
 80484aa:	b8 00 00 00 00       	mov    eax,0x0
}
 80484af:	c9                   	leave  
 80484b0:	c3                   	ret    
 80484b1:	66 90                	xchg   ax,ax
 80484b3:	66 90                	xchg   ax,ax
 80484b5:	66 90                	xchg   ax,ax
 80484b7:	66 90                	xchg   ax,ax
 80484b9:	66 90                	xchg   ax,ax
 80484bb:	66 90                	xchg   ax,ax
 80484bd:	66 90                	xchg   ax,ax
 80484bf:	90                   	nop

080484c0 <__libc_csu_init>:
 80484c0:	55                   	push   ebp
 80484c1:	57                   	push   edi
 80484c2:	31 ff                	xor    edi,edi
 80484c4:	56                   	push   esi
 80484c5:	53                   	push   ebx
 80484c6:	e8 85 fe ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 80484cb:	81 c3 35 1b 00 00    	add    ebx,0x1b35
 80484d1:	83 ec 1c             	sub    esp,0x1c
 80484d4:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 80484d8:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80484de:	e8 d1 fd ff ff       	call   80482b4 <_init>
 80484e3:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80484e9:	29 c6                	sub    esi,eax
 80484eb:	c1 fe 02             	sar    esi,0x2
 80484ee:	85 f6                	test   esi,esi
 80484f0:	74 27                	je     8048519 <__libc_csu_init+0x59>
 80484f2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80484f8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80484fc:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80484ff:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048503:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048507:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804850b:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 8048512:	83 c7 01             	add    edi,0x1
 8048515:	39 f7                	cmp    edi,esi
 8048517:	75 df                	jne    80484f8 <__libc_csu_init+0x38>
 8048519:	83 c4 1c             	add    esp,0x1c
 804851c:	5b                   	pop    ebx
 804851d:	5e                   	pop    esi
 804851e:	5f                   	pop    edi
 804851f:	5d                   	pop    ebp
 8048520:	c3                   	ret    
 8048521:	eb 0d                	jmp    8048530 <__libc_csu_fini>
 8048523:	90                   	nop
 8048524:	90                   	nop
 8048525:	90                   	nop
 8048526:	90                   	nop
 8048527:	90                   	nop
 8048528:	90                   	nop
 8048529:	90                   	nop
 804852a:	90                   	nop
 804852b:	90                   	nop
 804852c:	90                   	nop
 804852d:	90                   	nop
 804852e:	90                   	nop
 804852f:	90                   	nop

08048530 <__libc_csu_fini>:
 8048530:	f3 c3                	repz ret 
