===========================================================================
 * ROP gadgets generated by ROPEME on ropshell.com * 
===========================================================================
 + Binary info
---------------------------------------------------------------------------
hash: 2eb6c7daf5a70474bcb0bd267161c02c
name: ROP1
type: ELF
depth: 8
base: 0x80486b0L
arch: i386
size: 255
---------------------------------------------------------------------------
 + Unique gadgets: (offset: instruction)
---------------------------------------------------------------------------
0x00000590: # ret ;;
0x000000cd: # rep ret ;;
0x000000a3: # call edx ;;
0x000000ef: # call eax ;;
0x00000322: # leave ; ret ;;
0x000005a0: # nop ; rep ret ;;
0x0000058f: # pop ebp ; ret ;;
0x000002a9: # dec ecx ; ret ;;
0x00000521: # or cl cl ; ret ;;
0x00000067: # ror cl 1 ; ret ;;
0x000000a4: # ror cl cl ; ret ;;
0x000000cc: # leave ; rep ret ;;
0x00000431: # lock leave ; ret ;;
0x000000a1: # add al 8 ; call edx ;;
0x0000059f: # nop ; nop ; rep ret ;;
0x000000ed: # add al 8 ; call eax ;;
0x000000cb: # add ecx ecx ; rep ret ;;
0x00000520: # add al 8 ; leave ; ret ;;
0x00000066: # call eax ; leave ; ret ;;
0x000000a3: # call edx ; leave ; ret ;;
0x0000058e: # pop edi ; pop ebp ; ret ;;
0x00000065: # or bh bh ; ror cl 1 ; ret ;;
0x0000059e: # nop ; nop ; nop ; rep ret ;;
0x00000085: # clc ; jne 0x8048739 ; ret ;;
0x0000031e: # mov [0xc9f0458b] eax ; ret ;;
0x00000320: # inc ebp ; lock leave ; ret ;;
0x000000a2: # or bh bh ; ror cl cl ; ret ;;
0x000000ec: # lahf ; add al 8 ; call eax ;;
0x0000004c: # push es ; ja 0x8048700 ; ret ;;
0x000000c8: # mov al [0xc9010804] ; rep ret ;;
0x00000049: # or [ebx + 0x17706f8] al ; ret ;;
0x000000ca: # or [ecx] al ; leave ; rep ret ;;
0x0000009c: # mov [esp] 0x804a068 ; call edx ;;
0x0000005f: # mov [esp] 0x804a068 ; call eax ;;
0x000000e8: # mov [esp] 0x8049f10 ; call eax ;;
0x0000059d: # nop ; nop ; nop ; nop ; rep ret ;;
0x00000084: # sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000062: # push 0xff0804a0 ; ror cl 1 ; ret ;;
0x000000c7: # push 0x10804a0 ; leave ; rep ret ;;
0x000000c9: # add al 8 ; add ecx ecx ; rep ret ;;
0x000000a1: # add al 8 ; call edx ; leave ; ret ;;
0x0000058d: # pop esi ; pop edi ; pop ebp ; ret ;;
0x0000051d: # mov eax [0x804a07c] ; leave ; ret ;;
0x000000a0: # mov al [0xd2ff0804] ; leave ; ret ;;
0x00000064: # add al 8 ; call eax ; leave ; ret ;;
0x0000009f: # push 0xff0804a0 ; ror cl cl ; ret ;;
0x00000063: # mov al [0xd0ff0804] ; leave ; ret ;;
0x0000004b: # clc ; push es ; ja 0x8048700 ; ret ;;
0x00000083: # rcl cl ; clc ; jne 0x8048739 ; ret ;;
0x000003fa: # add eax 0xfffb00e8 ; dec ecx ; ret ;;
0x000000c5: # mov [0x804a068] 1 ; leave ; rep ret ;;
0x0000059c: # nop ; nop ; nop ; nop ; nop ; rep ret ;;
0x00000373: # add [edi + 0xffffffbd] bh ; leave ; ret ;;
0x0000042f: # mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x0000027e: # mov eax [ebp + 0xffffffec] ; leave ; ret ;;
0x000000ea: # and al 0x10 ; lahf ; add al 8 ; call eax ;;
0x00000212: # mov eax [ebp + 0xfffffff4] ; leave ; ret ;;
0x0000009a: # and al 4 ; mov [esp] 0x804a068 ; call edx ;;
0x00000048: # add al 8 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x000000c6: # add eax 0x804a068 ; add ecx ecx ; rep ret ;;
0x0000058c: # pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x0000059b: # nop ; nop ; nop ; nop ; nop ; nop ; rep ret ;;
0x0000009c: # mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x0000005f: # mov [esp] 0x804a068 ; call eax ; leave ; ret ;;
0x0000005c: # sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x000000e5: # sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000082: # add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000060: # add al 0x24 ; push 0xff0804a0 ; ror cl 1 ; ret ;;
0x0000009d: # add al 0x24 ; push 0xff0804a0 ; ror cl cl ; ret ;;
0x0000009e: # and al 0x68 ; mov al [0xd2ff0804] ; leave ; ret ;;
0x0000058b: # sbb al 0x5b ; pop esi ; pop edi ; pop ebp ; ret ;;
0x00000061: # and al 0x68 ; mov al [0xd0ff0804] ; leave ; ret ;;
0x0000059a: # nop ; nop ; nop ; nop ; nop ; nop ; nop ; rep ret ;;
0x00000588: # fild [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret ;;
0x00000047: # mov al [0xf8830804] ; push es ; ja 0x8048700 ; ret ;;
0x00000044: # or [0x804a068] ch ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000098: # mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x00000045: # sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000099: # inc esp ; and al 4 ; mov [esp] 0x804a068 ; call edx ;;
0x000000c4: # inc esi ; add eax 0x804a068 ; add ecx ecx ; rep ret ;;
0x00000046: # push 0x830804a0 ; clc ; push es ; ja 0x8048700 ; ret ;;
0x00000081: # pop ds ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x0000009a: # and al 4 ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x00000599: # nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; rep ret ;;
0x00000589: # add esp 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x0000005e: # sbb bh al ; add al 0x24 ; push 0xff0804a0 ; ror cl 1 ; ret ;;
0x0000005c: # sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ; leave ; ret ;;
0x000000e3: # mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x0000005a: # mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x0000007f: # shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x0000009b: # add al 0xc7 ; add al 0x24 ; push 0xff0804a0 ; ror cl cl ; ret ;;
0x00000043: # add al 8 ; sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000098: # mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x00000099: # inc esp ; and al 4 ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x00000095: # sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x0000031c: # add [ebp + 0xffffffa3] dh ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000059: # push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x000000e2: # push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000040: # mov eax 0x804a06b ; sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000042: # mov al [0x682d0804] ; mov al [0xf8830804] ; push es ; ja 0x8048700 ; ret ;;
0x0000007c: # add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x0000005a: # mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ; leave ; ret ;;
0x0000007d: # mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000097: # sbb [ecx + 0xc7042444] cl ; add al 0x24 ; push 0xff0804a0 ; ror cl cl ; ret ;;
0x0000003e: # nop ; mov eax 0x804a06b ; sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000041: # imul esp [eax + 0x682d0804] 0xa0 ; add al 8 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000093: # mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x0000007b: # clc ; add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000095: # sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x000000e1: # push ss ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000583: # mov [ecx] 0xdf75f739 ; add esp 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x0000036d: # mov [ebp + 0xfffffff4] eax ; cmp [ebp + 0xfffffff4] 0 ; jg 0x80489e3 ; leave ; ret ;;
0x0000003d: # nop ; nop ; mov eax 0x804a06b ; sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000586: # div [ebp + 0xffffffdf] ; add esp 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x00000059: # push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ; leave ; ret ;;
0x0000007a: # sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000054: # add [ebp + 0x55f674c0] al ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x000000dd: # add [ebp + 0x551674c0] al ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x0000003a: # nop ; nop ; nop ; mov eax 0x804a06b ; sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000079: # or cl al ; clc ; add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000092: # push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x00000093: # mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x00000318: # push es ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000039: # nop ; nop ; nop ; nop ; mov eax 0x804a06b ; sub eax 0x804a068 ; cmp eax 6 ; ja 0x8048700 ; ret ;;
0x00000077: # mov al [0xf8c10804] ; add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000076: # push 0xc10804a0 ; clc ; add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000078: # add al 8 ; sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000581: # inc [ebx + 0xf73901c7] ; jne 0x8048c18 ; add esp 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x00000584: # add [ecx] edi ; div [ebp + 0xffffffdf] ; add esp 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x00000582: # add edi 1 ; cmp edi esi ; jne 0x8048c18 ; add esp 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret ;;
0x00000054: # add [ebp + 0x55f674c0] al ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ; leave ; ret ;;
0x000000db: # add [eax] al ; add [ebp + 0x551674c0] al ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000052: # add [eax] al ; add [ebp + 0x55f674c0] al ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x00000316: # adc [ebp + 6] bh ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000092: # push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x00000075: # sub eax 0x804a068 ; sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000074: # or [0x804a068] ch ; sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x0000008d: # add [ebp + 0x55f674d2] al ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x00000276: # mov eax [ebp + 0xffffffec] ; cmp eax [ebp + 0x10] ; jl 0x80488e3 ; mov eax [ebp + 0xffffffec] ; leave ; ret ;;
0x000000d9: # mov eax 0 ; test eax eax ; je 0x80487a7 ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000315: # inc ebp ; adc [ebp + 6] bh ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000050: # mov eax 0 ; test eax eax ; je 0x80486fe ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x00000071: # push 0x2d0804a0 ; push 0xc10804a0 ; clc ; add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000053: # add [eax] al ; test eax eax ; je 0x80486fe ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x000000dc: # add [eax] al ; test eax eax ; je 0x80487a7 ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000052: # add [eax] al ; add [ebp + 0x55f674c0] al ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ; leave ; ret ;;
0x00000072: # mov al [0x682d0804] ; mov al [0xf8c10804] ; add cl [ecx + 0x1feac1c2] ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000073: # add al 8 ; sub eax 0x804a068 ; sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x0000008d: # add [ebp + 0x55f674d2] al ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x000000d8: # pop ds ; mov eax 0 ; test eax eax ; je 0x80487a7 ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x0000008b: # add [eax] al ; add [ebp + 0x55f674d2] al ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x0000004e: # add ebx eax ; mov eax 0 ; test eax eax ; je 0x80486fe ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x00000070: # mov eax 0x804a068 ; sub eax 0x804a068 ; sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x00000313: # lock cmp eax [ebp + 0x10] ; jge 0x80489cf ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000051: # add [eax] al ; add [eax] al ; test eax eax ; je 0x80486fe ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x804a068 ; call eax ;;
0x000000da: # add [eax] al ; add [eax] al ; test eax eax ; je 0x80487a7 ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp] 0x8049f10 ; call eax ;;
0x00000310: # add [ebx + 0x453bf045] ecx ; adc [ebp + 6] bh ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000089: # mov edx 0 ; test edx edx ; je 0x8048737 ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x0000006f: # add [eax + 0x804a068] bh ; sub eax 0x804a068 ; sar eax 2 ; mov edx eax ; shr edx 0x1f ; add eax edx ; sar eax 1 ; jne 0x8048739 ; ret ;;
0x0000008c: # add [eax] al ; test edx edx ; je 0x8048737 ; push ebp ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ;;
0x0000008b: # add [eax] al ; add [ebp + 0x55f674d2] al ; mov ebp esp ; sub esp 0x18 ; mov [esp + 4] eax ; mov [esp] 0x804a068 ; call edx ; leave ; ret ;;
0x0000030f: # lock add [ebx + 0x453bf045] ecx ; adc [ebp + 6] bh ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000312: # inc ebp ; lock cmp eax [ebp + 0x10] ; jge 0x80489cf ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x0000030e: # inc ebp ; lock add [ebx + 0x453bf045] ecx ; adc [ebp + 6] bh ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x00000311: # mov eax [ebp + 0xfffffff0] ; cmp eax [ebp + 0x10] ; jge 0x80489cf ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x0000030c: # adc eax 0x1f04583 ; mov eax [ebp + 0xfffffff0] ; cmp eax [ebp + 0x10] ; jge 0x80489cf ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
0x0000030d: # add [ebp + 0xfffffff0] 1 ; mov eax [ebp + 0xfffffff0] ; cmp eax [ebp + 0x10] ; jge 0x80489cf ; cmp [ebp + 0xfffffff4] 0 ; jne 0x8048972 ; mov eax [ebp + 0xfffffff0] ; leave ; ret ;;
